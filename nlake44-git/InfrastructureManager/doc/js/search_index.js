var search_data = {"index":{"searchIndex":["badconfigurationexception","helperfunctions","infrastructuremanager","infrastructuremanagerserver","convert_fqdn_to_ip()","create_appscale_security_group()","describe_instances()","generate_ssh_key()","get_cert()","get_ips()","get_key()","get_optimal_spot_price()","get_public_ips()","get_random_alphanumeric()","get_secret()","log()","log_obscured_env()","new()","obscure_string()","on_init()","read_file()","run_instances()","set_creds_in_env()","shell()","spawn_vms()","terminate_instances()","terminate_vms()","write_file()"],"longSearchIndex":["badconfigurationexception","helperfunctions","infrastructuremanager","infrastructuremanagerserver","helperfunctions::convert_fqdn_to_ip()","helperfunctions::create_appscale_security_group()","infrastructuremanager#describe_instances()","helperfunctions::generate_ssh_key()","helperfunctions::get_cert()","helperfunctions::get_ips()","helperfunctions::get_key()","helperfunctions::get_optimal_spot_price()","helperfunctions::get_public_ips()","helperfunctions::get_random_alphanumeric()","helperfunctions::get_secret()","infrastructuremanager::log()","helperfunctions::log_obscured_env()","infrastructuremanager::new()","helperfunctions::obscure_string()","infrastructuremanagerserver#on_init()","helperfunctions::read_file()","infrastructuremanager#run_instances()","helperfunctions::set_creds_in_env()","helperfunctions::shell()","helperfunctions::spawn_vms()","infrastructuremanager#terminate_instances()","helperfunctions::terminate_vms()","helperfunctions::write_file()"],"info":[["BadConfigurationException","","BadConfigurationException.html","","<p>BadConfigurationExceptions represent an exception that can be thrown by the\nAppController or any other …\n"],["HelperFunctions","","HelperFunctions.html","","<p>HelperFunctions holds miscellaneous functions - functions that really\naren’t bound to a particular service, …\n"],["InfrastructureManager","","InfrastructureManager.html","","<p>InfrastructureManager provides callers with the ability to acquire and\nrelease virtual machines from …\n"],["InfrastructureManagerServer","","InfrastructureManagerServer.html","","<p>InfrastructureManagerServer is a wrapper around InfrastructureManager that \ngives it the ability to respond …\n"],["convert_fqdn_to_ip","HelperFunctions","HelperFunctions.html#method-c-convert_fqdn_to_ip","(host)","<p>In cloudy deployments, the recommended way to determine a machine’s true\nprivate IP address from its …\n"],["create_appscale_security_group","HelperFunctions","HelperFunctions.html#method-c-create_appscale_security_group","(infrastructure, group)","<p>Creates a new security group in the given cloud infrastructure and opens\nall the TCP, UDP, and ICMP ports …\n"],["describe_instances","InfrastructureManager","InfrastructureManager.html#method-i-describe_instances","(parameters, secret)","<p>Queries our internal list of reservations to see if the virtual machines\ncorresponding to the given reservation …\n"],["generate_ssh_key","HelperFunctions","HelperFunctions.html#method-c-generate_ssh_key","(outputLocation, name, infrastructure)","<p>Generates a new SSH key for use with the given cloud infrastructure. If the\nkeyname was already in the …\n"],["get_cert","HelperFunctions","HelperFunctions.html#method-c-get_cert","(filename)","<p>Reads the given file and parses the X509 certificate data it contains.\n"],["get_ips","HelperFunctions","HelperFunctions.html#method-c-get_ips","(ips)","<p>Given an array containing public and private IPs, separates them into one\npublic IP array and a private …\n"],["get_key","HelperFunctions","HelperFunctions.html#method-c-get_key","(filename)","<p>Reads the given file and parses the SSL private key data that it contains.\n"],["get_optimal_spot_price","HelperFunctions","HelperFunctions.html#method-c-get_optimal_spot_price","(instance_type)","<p>Queries Amazon EC2’s Spot Instance pricing history to see how much other\nusers have paid for the given …\n"],["get_public_ips","HelperFunctions","HelperFunctions.html#method-c-get_public_ips","(ips)","<p>Similar to get_ips, but does not attempt to resolve the private IPs seen.\nReturns a single array with …\n"],["get_random_alphanumeric","HelperFunctions","HelperFunctions.html#method-c-get_random_alphanumeric","(length=10)","<p>Returns a random string composed of alphanumeric characters, as long as the\nuser requests.\n"],["get_secret","HelperFunctions","HelperFunctions.html#method-c-get_secret","(filename=\"/etc/appscale/secret.key\")","<p>Reads a file that contains the AppScale shared secret (a password that is\nused to authenticate remote …\n"],["log","InfrastructureManager","InfrastructureManager.html#method-c-log","(msg)","<p>Logs a message to STDOUT and flushes it immediately, so that it doesn’t\nget buffered before arriving …\n"],["log_obscured_env","HelperFunctions","HelperFunctions.html#method-c-log_obscured_env","()","<p>Prints out a list of environment variables currently set in this process’\nruntime and their values.  …\n"],["new","InfrastructureManager","InfrastructureManager.html#method-c-new","()","<p>Creates a new InfrastructureManager, which keeps track of the reservations\nmade thus far, and reads a …\n"],["obscure_string","HelperFunctions","HelperFunctions.html#method-c-obscure_string","(string)","<p>Obscures out sensitive strings by replacing most of the characters with a\ndummy character. Callers can …\n"],["on_init","InfrastructureManagerServer","InfrastructureManagerServer.html#method-i-on_init","()","<p>When the InfrastructureManagerServer starts, this method will expose only\nthe necessary methods via  …\n"],["read_file","HelperFunctions","HelperFunctions.html#method-c-read_file","(location, chomp=true)","<p>A convenience method that can be used to read a file and return its\ncontents as a String.\n"],["run_instances","InfrastructureManager","InfrastructureManager.html#method-i-run_instances","(parameters, secret)","<p>Acquires machines via a cloud infrastructure. As this process could take\nlonger than the timeout for …\n"],["set_creds_in_env","HelperFunctions","HelperFunctions.html#method-c-set_creds_in_env","(creds, cloud_num)","<p>Given a Hash of EC2 credentials, sets them as environment variables in the\ncurrent environment. This …\n"],["shell","HelperFunctions","HelperFunctions.html#method-c-shell","(cmd)","<p>Logs and executes a shell command - useful for mocking since flexmock\ncan’t mock out the backticks method …\n"],["spawn_vms","HelperFunctions","HelperFunctions.html#method-c-spawn_vms","(parameters)","<p>This method spawns virtual machines in a supported cloud infrastructure. It\ndispatches the initial request …\n"],["terminate_instances","InfrastructureManager","InfrastructureManager.html#method-i-terminate_instances","(parameters, secret)","<p>Uses the credentials given to terminate machines spawned via a cloud\ninfrastructure.\n"],["terminate_vms","HelperFunctions","HelperFunctions.html#method-c-terminate_vms","(ids, infrastructure)","<p>Given a list of instance ids, terminates them in the given cloud\ninfrastructure.\n"],["write_file","HelperFunctions","HelperFunctions.html#method-c-write_file","(location, contents)","<p>A convenience method that can be used to write a String to a file, creating\nthat file if it does not …\n"]]}}